"0","## Since Policy A and Policy B have unique damage functions that are different from above, I will need to re-write the damage function so as to account for them, and additionally calculate the NPV from that. (Maybe using max())"
"0","utility <- function(df){"
"0","  # year = df$year # Maintaining year from the dataframe so i dont have to cbind"
"0","  wbl = df$warming_baseline # Same with warming_baseline and warming_pulse"
"0","  wpl = df$warming_pulse"
"0","  "
"0","  # Calculating damages under for each year, based off of the change from pre-industrial era for policy     A (0.5 probability)"
"0","  ## First option (a1)"
"0","  damages_a1 = (-2.05*10^(12))*df$warming_baseline + (3.9*10^(13))*(df$warming_baseline^2) "
"0","  ## Second option (a2)"
"0","  damages_a2 = 1.5*((-2.05*10^(12))*df$warming_baseline + (3.9*10^(13))*(df$warming_baseline^2))"
"0","  "
"0","  # Calculating damages for each year based off change for Policy B "
"0","  damages_b = ifelse(df$year <= 2050, # If the year is below or equal to 2050"
"0","                     (-2.05*10^(12))*df$warming_baseline + (3.9*10^(13))*(df$warming_baseline^2), # Then                      the warming continues as it would in the baseline "
"0","                     (-2.05*10^(12))*1.29 + (3.9*10^(13))*(1.29^2)) # Once it hits 2050 it will                              stabilize and stay that way forever"
"0","  r = 0.02 ## setting discount rate "
"0","  year = 79 ## Setting time to calculate the present value under different policies"
"0","  a1max = max(damages_a1) ## the maximum damages under the first possibility of policy A "
"0","  a2max = max(damages_a2) ## the maximum damages under the second possibility of policy A"
"0","  bmax = max(damages_b) ## The maximum damages under Policy B"
"0","  "
"0","  pva1 = a1max/((1+r)^year) ## Calculating the present value of a1 with discounting in 2100"
"0","  pva2 = a2max/((1+r)^year) ## Calculating the present value of a2 with discounting in 2100"
"0","  pvb = bmax/((1+r)^year) ## Calculating the present value of b with discounting in 2100"
"0","  "
"0","  Epva = (0.5 * pva1) + (0.5 * pva2) ## Calculating the expected present value considering the probability of either circumstance in Policy A "
"0","  Epvb = 1 * pvb ## Calculating the expected value of Policy B"
"0","  "
"0","  return(tibble(pva = Epva, pvb = Epvb))"
"0","}"
"0",""
"0","## Throw it in a dataframe "
"0","test4 <- utility(warming)"
"0",""
"0","## Renaming columns for Kable output"
"0","colnames(test4) = c(""Policy A"", ""Policy B"")"
"0",""
"0","## Throwing it into a kable to make it pretty "
"0","knitr::kable(test4, align = ""c"", caption = ""Expected Present Values of Each Policy ($)"")"
"2","Registered S3 methods overwritten by 'htmltools':
  method               from         
  print.html           tools:rstudio
  print.shiny.tag      tools:rstudio
  print.shiny.tag.list tools:rstudio
"
